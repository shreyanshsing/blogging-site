{"version":3,"sources":["logo.svg","components/introductionpage.js","firebase/firebase.js","components/blog.js","components/post.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introductionpage","className","Container","fluid","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","id","Nav","Link","href","Form","inline","Control","type","placeholder","Button","Row","Carousel","controls","interval","fade","pause","Item","Image","src","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","auth","firestore","Blog","argument","useState","name","setName","email","setEmail","topic","setTopic","view","setView","color","setColor","content","setContent","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","onSubmit","event","preventDefault","Firebase","collection","add","profile","user","database","ref","set","console","log","Group","controlId","Label","onChange","target","value","defaultValue","required","e","image","files","imageFile","onClick","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","catch","error","InputGroup","Prepend","Text","as","aria-label","Post","props","postData","setPostData","useEffect","snapshot","state","val","backgroundColor","ListGroup","style","roundedCircle","horizontal","Card","Title","Body","Contact","fontFamily","lineHeight","fontSize","padding","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c6777f3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useEffect} from 'react'\nimport './introductionpage.css'\nimport {Carousel,Container,Form,Navbar,Button,Image,Row,Nav} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nfunction Introductionpage(){\n\t     \n\treturn( \n          <div className=\"mt-10 ml-10\">\n          <Container fluid className=\"pl-0 pr-0\">\n           <h1 className=\"title\">Blogger's Adda</h1>\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fluid>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"md-auto justify-content-center\" >\n          <Nav.Link href=\"/about\" className=\"pl-20\">About Us </Nav.Link>\n          <Nav.Link href=\"/contact\" className=\"pl-20\">Contact Us</Nav.Link>\n          </Nav>\n          <Form  className=\"nav-search\" inline>\n          <Form.Control type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-info\">Search</Button>\n          </Form>\n          </Navbar.Collapse>\n          </Navbar>\n          <Row className=\"justify-content-center\">\n          <h2 className=\"description\">Now create your blog with us for free...<br/>\n          Just do few steps and you are done.</h2>\n          </Row>\n          <div>\n          <Carousel \n          controls={false}\n          interval={4000}\n          fade={true}\n          pause={false}\n          >\n          <Carousel.Item>\n         <div className=\"slides\">\n         <Image src=\"blogger.png\" className=\"image-blog\"/>\n         </div>\n         </Carousel.Item>\n         <Carousel.Item>\n         <div className=\"slides\">\n         <Image src=\"blogger1.png\" className=\"image-blog\"/>\n         </div>\n         </Carousel.Item>\n         <Carousel.Item>\n         <div className=\"slides\">\n         <Image src=\"blogger2.png\" className=\"image-blog\"/>\n         </div>\n         </Carousel.Item>\n         </Carousel>\n         </div>\n           <p className=\"justify-content-center padding\">\n         Hurry Up! create your first blog ....<br/>\n         <Link to=\"/blog\"><Button variant=\"success\">Create Blog</Button></Link>\n         </p>\n         </Container>\n         </div>\n\t\t)\n}\nexport default Introductionpage","import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport 'firebase/auth'\nimport \"firebase/firestore\";\n\n  const firebaseConfig = {\n  apiKey: \"AIzaSyDMAzuDuzqd6va8ueRBxzOqPALlfxeDK_Y\",\n  authDomain: \"blogging-site-d9bf2.firebaseapp.com\",\n  databaseURL: \"https://blogging-site-d9bf2.firebaseio.com\",\n  projectId: \"blogging-site-d9bf2\",\n  storageBucket: \"blogging-site-d9bf2.appspot.com\",\n  messagingSenderId: \"195318682703\",\n  appId: \"1:195318682703:web:b203e624ea4da72598863a\",\n  measurementId: \"G-S100V45V47\"\n};\n    // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const storage = firebase.storage()\n  const auth=firebase.auth()\n  const firestore = firebase.firestore();\n//analytics is optional for this tutoral \n\n\nexport  {\n   storage,auth,firestore, firebase as default\n }\n","import React ,{useState,useEffect} from 'react'\nimport {Container,Row,Col,Image,Button,Form,InputGroup,Modal} from 'react-bootstrap'\nimport Firebase from 'firebase'\nimport {firestore,storage} from '../firebase/firebase' \nimport {Link} from 'react-router-dom'\nfunction Blog(argument) {\n\tconst [name,setName]=useState('')\n\tconst [email,setEmail]=useState('')\n\tconst [topic,setTopic]=useState('')\n  const [view,setView]=useState(false)\n    const [color,setColor]=useState('')\n    const [content,setContent]=useState('')\n    const [imageAsFile, setImageAsFile] = useState('')\n    const [imageAsUrl, setImageAsUrl] = useState('')\n    const handleNameChange=(event)=>{\n    \tsetName(event.target.value)\n    }\n    const handleEmailChange=(event)=>{\n    \tsetEmail(event.target.value)\n    }\n    const handleTopicChange=(event)=>{\n    \tsetTopic(event.target.value)\n    }\n    const handleImageAsFile = (e) => {\n      const image = e.target.files[0]\n      setImageAsFile(imageFile => (image))\n  }  \n    const handleContent=(event)=>{\n        setContent(event.target.value)\n    }\n    const handleColor=(event)=>{\n        setColor(event.target.value)\n    }\n    const handleImageUpload=()=>{\n            const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\n    //initiates the firebase side uploading \n    uploadTask.on('state_changed', \n    (snapShot) => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot)\n    }, (err) => {\n      //catches the errors\n      console.log(err)\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(imageAsFile.name).getDownloadURL()\n       .then(fireBaseUrl => {\n         setImageAsUrl(fireBaseUrl)\n       })\n       .catch((error)=>{\n        console.log(error);\n       })\n       console.log(storage.ref('images').child(imageAsFile.name).getDownloadURL())\n      })\n    }\n\tconst handleSubmit=(event)=>{\n         event.preventDefault();\n          setView(true)\n            const db=Firebase.firestore();\n    const userRef=db.collection(\"profile\").add({\n      name:name,\n      topic:topic,\n      content:content,\n      profile:imageAsUrl ,\n      email:email,\n      color:color\n    })\n       const user={\n      \"name\":name,\n      \"topic\":topic,\n      \"email\":email,\n      \"profile\":imageAsUrl,\n      \"content\":content,\n      \"color\":color\n    }\n     Firebase.database().ref(\"/\").set(user);\n    console.log({imageAsUrl}) \n  }\n  \n\treturn(\n\t\t<Container>\n\t\t Welcome ...<br/>\n\t\t Plaese enter details below and that's it your blog is ready to be posted .<br/>\n\t\t <b>Some important instructions , please go through once ></b>\n\t\t <ol className=\"justify-content-center bg-success\">\n\t\t <li>Field's marked * are manadatory .</li>\n\t\t <li>Only fill the color codes of background-color that you want .</li>\n     <li>When you click Submit your post will be saved permanently ,you can serach it by just entering Topic.</li>\n\t\t </ol> \n\t\t <Form onSubmit={handleSubmit}>\n    <Form.Group controlId=\"formBasicName\">\n    <Form.Label>*Author Name:</Form.Label>\n    <Form.Control type=\"text\" onChange={handleNameChange}  placeholder=\"Enter name\" defaultValue={name} required/>\n    </Form.Group>\n\n    <Form.Group controlId=\"formBasicTopic\">\n    <Form.Label>*Topic :</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"topic\" onChange={handleTopicChange} defaultValue={topic} required/>\n    </Form.Group>\n    <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email :</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Let other's approach you.\" onChange={handleEmailChange}  defaultValue={email} />\n    </Form.Group>\n    <Form.Group controlId=\"profile-photo\">\n    <Form.Label>Profile-photo :</Form.Label>\n    <Form.Control type=\"file\"  onChange={handleImageAsFile}/>\n    <Button type=\"button\" variant=\"success\" onClick={handleImageUpload}>Click to Upload Image</Button>\n    </Form.Group>\n    <Form.Group controlId=\"color\">\n    <Form.Label>Background-color :</Form.Label>\n    <Form.Control type=\"text\" defaultValue={color} placeholder=\"*Only enter the hex color codes .Default background-color is White.\" onChange={handleColor}/>\n    </Form.Group>\n    <InputGroup>\n    <InputGroup.Prepend>\n      <InputGroup.Text>Enter Content</InputGroup.Text>\n     </InputGroup.Prepend>\n     <Form.Control as=\"textarea\" onChange={handleContent} defaultValue={content} aria-label=\"Enter Your Content.\" required/>\n     </InputGroup>\n     <Button variant=\"primary\" type=\"submit\">\n     Submit\n     </Button>\n     </Form>\n     {\n      view?<Link to=\"/post\">See your Blog</Link>:null\n     }\n     </Container>\n\t\t)\n}\nexport default Blog","import React,{useState,useEffect} from 'react'\nimport {Container,Image,Row,Col,ListGroup,Card} from 'react-bootstrap'\nimport Firebase from 'firebase'\nimport './post.css'\nimport {Link} from 'react-router-dom'\nimport $ from 'jquery'\nfunction Post(props) {\n\tconst [postData,setPostData]=useState({})\n\tuseEffect(()=>{\n       let ref = Firebase.database().ref(\"/\");\n       ref.on(\"value\", snapshot => {\n      const state = snapshot.val();\n      setPostData(state);\n       })\n\t},[])\n  const backgroundColor=postData.color;\n  console.log(backgroundColor)\n  console.log(postData)\n\treturn(<div>\n          <ListGroup className=\"list\">\n         <ListGroup.Item><Link to=\"\"><i className=\"material-icons\">favorite_border</i></Link>Like</ListGroup.Item>\n          <ListGroup.Item><Link to=\"\"><i className=\"material-icons\">share</i></Link>Share</ListGroup.Item>\n          </ListGroup>    \n\n            <Container className=\"post\" style={{backgroundColor:backgroundColor}}>\n             <h1>{postData.topic}</h1>\n             <h3><small>by </small><b> {postData.name}</b></h3>\n             <Image className=\"user-img\" src={postData.profile} roundedCircle  />\n             <article className=\"content\">\n             {postData.content}\n             </article>\n        </Container>   \n        <Container fluid>\n        <ListGroup  className=\"list-small-screen\" horizontal>\n          <ListGroup.Item><Link to=\"\"><i className=\"material-icons\">favorite_border</i></Link>Like</ListGroup.Item>\n          <ListGroup.Item><Link to=\"\"><i className=\"material-icons\">share</i></Link>Share</ListGroup.Item>\n          </ListGroup>\n          </Container> \n        <Card className=\"user\" >\n        <Card.Title>Meet {postData.name}</Card.Title>\n        <Card.Body>\n        <Image className=\"card-img\" src={postData.profile}/><br/>\n        Skills:<br/>\n        Contact @:<br/>\n        About:\n        </Card.Body>\n        </Card>\n        </div>\n\t\t)\n}\nexport default Post","import React from 'react'\nimport {Container,Card} from 'react-bootstrap'\nfunction Contact(props) {\n\tconst style={\n\t\tbackgroundColor:\"#e3e8e8\",\n\t\tfontFamily:\"'Antic Slab', serif\",\n\t\tlineHeight:\"1.7em\",\n\t\tfontSize:\"1.5em\",\n\t\tpadding:\"5px\"\n\t}\n\t const heading={\n\t \tcolor:\"#009999\"\n\t }\n\treturn(\n          <div>\n            <Container>\n            <h1 style={heading}>Blogger's Adda</h1>\n              <article  style={style}>\n              is a social plateform where individuals from different places or communities can share there intersets.<br/>\n              It a simple project developed by Shreyansh Singh by using ReactJs, javascript,html,jquery. It is just a dummy project .<br/>\n              All the backend-services are provided bu Google Firebase. and all the data is stored on the temporary basis.<br/>\n              It allow you to only enter context part,(i.e. no image in the post area.) and is under modification constantly.\n              </article>\n              <Card bg=\"info\">\n              <Card.Title>\n                 Contact Info:\n              </Card.Title>\n              <Card.Body>\n              <h3>Email<i className=\"material-icons\">email</i>:shreyanshsinghjee@gmail.com</h3>\n              <h3>Phone Number <i className=\"material-icons\">contact_phone</i>:+91 6388837120</h3>\n              <h3>Address<i className=\"material-icons\">add_location</i>:29 P, Yahsoda Nagar Kanpur,Uttar Pradesh,India</h3>\n              <h3>Zip code:208011</h3>\n              </Card.Body>\n              </Card>\n            </Container>\n          </div>\n\t\t)\n}\nexport default Contact","import React,{Suspense,lazy} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Introductionpage from './components/introductionpage'\nimport {BrowserRouter as Router ,Switch,Link,Route} from 'react-router-dom'\nimport Blog from './components/blog'\nimport Button from 'react-bootstrap/Button'\nimport Post from './components/post'\nimport Contact from './components/contact'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n         <Router>\n         <Switch>\n         <Route exact path=\"/blogging-site\" component={Introductionpage}/>\n         <Route exact path=\"/blog\" component={Blog}/>\n         <Route exact path=\"/post\" component={Post}/>\n         <Route exact path=\"/contact\" component={Contact}/>\n         </Switch>\n         </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}